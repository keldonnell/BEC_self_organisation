#!/bin/bash -l
#SBATCH --job-name=smf_p0_sweep
#SBATCH --time=00:10:00
#SBATCH --cpus-per-task=1
#SBATCH --mem=2G
#SBATCH --output=logs/%x-%A_%a.out

set -euo pipefail

# --- Modules & env ---
[ -f /etc/profile.d/modules.sh ] && source /etc/profile.d/modules.sh
module load applications/conda/miniconda3
source "$(conda info --base)/etc/profile.d/conda.sh"
conda activate smf_env

# --- Inputs from submit script ---
: "${P0_START:?Need P0_START}"
: "${P0_END:?Need P0_END}"
: "${N_INTERVALS:?Need N_INTERVALS}"
INDEX_OFFSET="${INDEX_OFFSET:-0}"
DENSITY_CENTERS="${DENSITY_CENTERS:-}"
DENSITY_WIDTH="${DENSITY_WIDTH:-}"
DENSITY_STRENGTH="${DENSITY_STRENGTH:-}"

if ! [[ "${N_INTERVALS}" =~ ^[0-9]+$ ]]; then
  echo "N_INTERVALS must be a non-negative integer, got '${N_INTERVALS}'" >&2
  exit 1
fi

NUM_PUMP_FRAMES=$(( N_INTERVALS + 1 ))

TID="${SLURM_ARRAY_TASK_ID:?missing array id}"
INDEX=$(( INDEX_OFFSET + TID ))

# --- Log what we're about to run ---
echo "JOB $SLURM_JOB_ID ARRAY_ID $TID  -> i=${INDEX} ; range=[${P0_START}, ${P0_END}] ; intervals=${N_INTERVALS} (frames=${NUM_PUMP_FRAMES})"
echo "Analytic t0 extension enabled (--extend-time-using-t0)."
if [[ -n "${DENSITY_CENTERS}" || -n "${DENSITY_WIDTH}" || -n "${DENSITY_STRENGTH}" ]]; then
  echo "Density options: centers='${DENSITY_CENTERS:-}' width='${DENSITY_WIDTH:-}' strength='${DENSITY_STRENGTH:-}'"
fi

# --- Run job (your script computes p0 from s,e,n,i) ---
cd /home/users/seb25178/Projects/BEC_SMF/BEC_self_organisation
mkdir -p logs

DENSITY_ARGS=()
if [[ -n "${DENSITY_CENTERS}" ]]; then
  IFS=',: ' read -ra centres_array <<< "${DENSITY_CENTERS}"
  filtered_centres=()
  for centre in "${centres_array[@]}"; do
    centre_trimmed="${centre#"${centre%%[![:space:]]*}"}"
    centre_trimmed="${centre_trimmed%"${centre_trimmed##*[![:space:]]}"}"
    if [[ -n "${centre_trimmed}" ]]; then
      filtered_centres+=( "${centre_trimmed}" )
    fi
  done
  if [ "${#filtered_centres[@]}" -gt 0 ]; then
    DENSITY_ARGS+=( "--density-centers" )
    DENSITY_ARGS+=( "${filtered_centres[@]}" )
  fi
fi

if [[ -n "${DENSITY_WIDTH}" ]]; then
  IFS=',: ' read -ra widths_array <<< "${DENSITY_WIDTH}"
  filtered_widths=()
  for width in "${widths_array[@]}"; do
    width_trimmed="${width#"${width%%[![:space:]]*}"}"
    width_trimmed="${width_trimmed%"${width_trimmed##*[![:space:]]}"}"
    if [[ -n "${width_trimmed}" ]]; then
      filtered_widths+=( "${width_trimmed}" )
    fi
  done
  if [ "${#filtered_widths[@]}" -gt 0 ]; then
    DENSITY_ARGS+=( "--density-width" )
    DENSITY_ARGS+=( "${filtered_widths[@]}" )
  fi
fi

if [[ -n "${DENSITY_STRENGTH}" ]]; then
  DENSITY_ARGS+=( "--density-strength" "${DENSITY_STRENGTH}" )
fi

python gen_smf_1d.py \
  -f ivan_diss_params \
  -s "${P0_START}" \
  -e "${P0_END}" \
  -n "${NUM_PUMP_FRAMES}" \
  -i "${INDEX}" \
  --extend-time-using-t0 \
  "${DENSITY_ARGS[@]}"
